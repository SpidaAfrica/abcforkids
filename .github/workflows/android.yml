name: Build Signed Android App (Alternative)
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Setup Java (JDK 17)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Install Bubblewrap
        run: |
          npm install -g @bubblewrap/cli
          
      - name: Force configure Bubblewrap with environment variables
        run: |
          export BUBBLEWRAP_JAVA_PATH="$JAVA_HOME/bin/java"
          export BUBBLEWRAP_ANDROID_SDK="$ANDROID_SDK_ROOT"
          echo "BUBBLEWRAP_JAVA_PATH=$JAVA_HOME/bin/java" >> $GITHUB_ENV
          echo "BUBBLEWRAP_ANDROID_SDK=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          
          # Create bubblewrap config directory and file
          mkdir -p ~/.bubblewrap
          echo '{"jdkPath":"'$JAVA_HOME'","androidSdkPath":"'$ANDROID_SDK_ROOT'"}' > ~/.bubblewrap/config.json
          
          echo "Environment check:"
          echo "JAVA_HOME: $JAVA_HOME"
          echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
          java -version
          
      - name: Check for twa-manifest.json
        run: |
          if [ ! -f "twa-manifest.json" ]; then
            echo "Error: twa-manifest.json not found!"
            echo "Please create a twa-manifest.json file in your repository root."
            exit 1
          fi
          echo "Found twa-manifest.json:"
          cat twa-manifest.json
          
      - name: Decode Keystore
        run: |
          echo "$KEYSTORE_BASE64" | base64 --decode > my-release-key.keystore
          ls -la my-release-key.keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          
      - name: Try Bubblewrap build with timeout and non-interactive
        timeout-minutes: 10
        run: |
          # Set all required environment variables
          export JAVA_HOME=$JAVA_HOME
          export ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT
          export ANDROID_HOME=$ANDROID_SDK_ROOT
          
          # Try to run build command with timeout to avoid hanging
          timeout 600 bubblewrap build \
            --skipUpdateChecks \
            --skipPwaValidation \
            --signingKeyPath my-release-key.keystore \
            --signingKeyAlias "${{ secrets.KEY_ALIAS }}" \
            --signingKeyPassword "${{ secrets.KEY_PASSWORD }}" \
            --signingStorePassword "${{ secrets.KEYSTORE_PASSWORD }}" \
            --generateAppBundle || {
              echo "Bubblewrap build failed or timed out"
              echo "Trying alternative approach..."
              echo "n" | timeout 300 bubblewrap build \
                --skipUpdateChecks \
                --skipPwaValidation \
                --signingKeyPath my-release-key.keystore \
                --signingKeyAlias "${{ secrets.KEY_ALIAS }}" \
                --signingKeyPassword "${{ secrets.KEY_PASSWORD }}" \
                --signingStorePassword "${{ secrets.KEYSTORE_PASSWORD }}" \
                --generateAppBundle
            }
            
      - name: List generated files
        run: |
          echo "Files in current directory:"
          ls -la
          echo "Looking for APK and AAB files:"
          find . -name "*.apk" -o -name "*.aab" | head -10
          
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: signed-apk
          path: |
            **/*.apk
        if: success()
        
      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: signed-aab
          path: |
            **/*.aab
        if: success()
