name: Build Signed Android App
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Setup Java (JDK 17)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Install Bubblewrap
        run: npm install -g @bubblewrap/cli
        
      - name: Verify twa-manifest.json exists
        run: |
          if [ ! -f "twa-manifest.json" ]; then
            echo "Error: twa-manifest.json not found!"
            echo "Please create this file in your repository root."
            exit 1
          fi
          echo "Found twa-manifest.json:"
          cat twa-manifest.json
          
      - name: Fix twa-manifest.json signing key path
        run: |
          node -e "
          const fs = require('fs');
          const manifest = JSON.parse(fs.readFileSync('twa-manifest.json', 'utf8'));
          
          if (!manifest.signingKey) {
            manifest.signingKey = {};
          }
          
          manifest.signingKey.path = './my-release-key.keystore';
          
          fs.writeFileSync('twa-manifest.json', JSON.stringify(manifest, null, 2));
          console.log('Updated signing key path in twa-manifest.json');
          "
          
      - name: Decode Keystore
        run: |
          echo "$KEYSTORE_BASE64" | base64 --decode > my-release-key.keystore
          chmod 644 my-release-key.keystore
          ls -la my-release-key.keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          
      - name: Install expect for interactive prompts
        run: sudo apt-get update && sudo apt-get install -y expect
        
      - name: Build Signed APK & AAB
        run: |
          expect -c "
          set timeout 600
          spawn bubblewrap build --skipUpdateChecks --skipPwaValidation --signingKeyPath my-release-key.keystore --signingKeyAlias \"${{ secrets.KEY_ALIAS }}\" --signingKeyPassword \"${{ secrets.KEY_PASSWORD }}\" --signingStorePassword \"${{ secrets.KEYSTORE_PASSWORD }}\" --generateAppBundle
          
          expect {
            \"Do you want Bubblewrap to install the JDK\" {
              send \"n\r\"
              exp_continue
            }
            \"would you like to regenerate your project\" {
              send \"n\r\"
              exp_continue
            }
            \"then you may enter\" {
              send \"n\r\"
              exp_continue
            }
            \"(Y/n)\" {
              send \"n\r\"
              exp_continue
            }
            eof {
              exit 0
            }
            timeout {
              puts \"Build timed out\"
              exit 1
            }
          }
          "
          
      - name: Find and list generated files
        run: |
          echo "=== Current directory contents ==="
          ls -la
          echo ""
          echo "=== Searching for APK files ==="
          find . -name "*.apk" -type f | head -10
          echo ""
          echo "=== Searching for AAB files ==="
          find . -name "*.aab" -type f | head -10
          echo ""
          echo "=== Checking common output directories ==="
          ls -la app-* 2>/dev/null || echo "No app-* files found"
          ls -la android/ 2>/dev/null || echo "No android directory found"
          
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: signed-apk
          path: |
            **/*.apk
        if: success()
        
      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: signed-aab  
          path: |
            **/*.aab
        if: success()
